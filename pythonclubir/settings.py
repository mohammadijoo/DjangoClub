"""
Django settings for pythonclubir project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'wwz(2qhp0*$+@1ik7_qixgz4am=exk-9s822(%=k6glr4y%5_3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG =  True

ALLOWED_HOSTS = ['django3.ir', 'www.django3.ir']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'theblog',
    'theblogfa',
    'ml',
    'portfolio',
    'members',
    'ckeditor',
    'django_comments_xtd',
    'django_comments',  
    'social_django',
    'rest_framework',
    # 'wagtail.contrib.forms',
    # 'wagtail.contrib.redirects',
    # 'wagtail.embeds',
    # 'wagtail.sites',
    # 'wagtail.users',
    # 'wagtail.snippets',
    # 'wagtail.documents',
    # 'wagtail.images',
    # 'wagtail.search',
    # 'wagtail.admin',
    # 'wagtail.core',
    # 'taggit',
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    # 'wagtail.core.middleware.SiteMiddleware',
    # 'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'pythonclubir.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]
 

AUTHENTICATION_BACKENDS = (
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.github.GithubOAuth2',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.google.GoogleOAuth',
    'social_core.backends.linkedin.LinkedinOAuth2',
    'social_core.backends.stackoverflow.StackoverflowOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)


WSGI_APPLICATION = 'pythonclubir.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGES = (
   ('en', ('English')),
   ('fa', ('Farsi')),
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


import os
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]

# Email sending variables
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "mail.django3.ir"    # Insert Your mailing host
EMAIL_PORT = 587
EMAIL_USE_TLS = False
EMAIL_USE_SSL = False
EMAIL_HOST_USER = "InsertYours"
EMAIL_HOST_PASSWORD = "InsertYours"

 


LOGIN_REDIRECT_URL = 'en'
LOGOUT_REDIRECT_URL = 'en'

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = 'InsertYours'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'InsertYours'

SOCIAL_AUTH_GITHUB_KEY = 'InsertYours'
SOCIAL_AUTH_GITHUB_SECRET = 'InsertYours'

SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = 'InsertYours'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'InsertYours'

SOCIAL_AUTH_TWITTER_KEY = '' 
SOCIAL_AUTH_TWITTER_SECRET = ''

SOCIAL_AUTH_STACKOVERFLOW_KEY = '27101'
SOCIAL_AUTH_STACKOVERFLOW_SECRET = 'InsertYours'
SOCIAL_AUTH_STACKOVERFLOW_API_KEY = 'InsertYours'



# Add email to requested authorizations.
# SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_liteprofile', 'r_emailaddress']
SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_liteprofile']

# Add the fields so they will be requested from linkedin.
#SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ['emailAddress']

# Arrange to add the fields to UserSocialAuth.extra_data
# SOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [('id', 'id'),
#                                           ('firstName', 'first_name'),
#                                           ('lastName', 'last_name'),
#                                           ('emailAddress', 'email_address')]

SOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [('id', 'id'), ('firstName', 'first_name')]





USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True




SITE_ID = 3

COMMENTS_APP = 'django_comments_xtd'

COMMENTS_XTD_MAX_THREAD_LEVEL = 0
COMMENTS_XTD_LIST_ORDER = ('-thread_id', 'order')  # default is ('thread_id', 'order')

COMMENTS_XTD_CONFIRM_EMAIL = False

#  To help obfuscating comments before they are sent for confirmation.
COMMENTS_XTD_SALT = (b"Timendi causa est nescire. "
                     b"Aequam memento rebus in arduis servare mentem.")

# Source mail address used for notifications.
COMMENTS_XTD_FROM_EMAIL = "info@django3.ir"

# Contact mail address to show in messages.
COMMENTS_XTD_CONTACT_EMAIL = "info@django3.ir"


#COMMENTS_XTD_MODEL = 'theblog.models.CustomComment'
#COMMENTS_XTD_FORM_CLASS = 'mycomments.forms.MyCommentForm'



# COMMENTS_XTD_APP_MODEL_OPTIONS = {
#     'theblog.ArticlePage': {
#         'allow_flagging': False,
#         'allow_feedback': True,
#         'show_feedback': True,
#         'who_can_post': 'all'  # Valid values: 'all', users'
#     }
# }






